<style>
  body {
    overflow-x: hidden;
  }
  body.no-scroll {
    overflow: hidden;
    padding-right: 15px;
  }
  .full-width-page {
    width: 100vw;
    margin-left: calc(-50vw + 50%);
    margin-right: calc(-50vw + 50%);
  }

  .comments-sidebar {
    position: fixed;
    top: 0;
    right: -750px;
    width: 750px;
    height: 100vh;
    background-color: #f8f9fa;
    box-shadow: -2px 0 10px rgba(0, 0, 0, 0.1);
    z-index: 1050;
    overflow-y: hidden;
    transition: right 0.5s ease-in-out;
  }

  .comments-sidebar.show {
    right: 0;
  }

  .overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(0, 0, 0, 0.5);
    z-index: 1040;
    display: none;
  }

  .overlay.show {
    display: block;
  }

  .placeholder-text {
    color: #6c757d;
  }

  .comment-textarea {
    display: none;
    margin-top: 15px;
    margin-left: 40px;
  }

  .reply-button {
    cursor: pointer;
  }

  .comment-textarea.show {
    display: block;
  }

   /* Dropdown menu styles */
  .dropdown {
    position: relative;
    display: inline-block;
  }
  
  .dropdown-menu {
    position: absolute;
    right: 0;
    background-color: white;
    min-width: 120px;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    border-radius: 8px;
    display: none;
  }
  
  .dropdown-menu.show {
    display: block;
  }
  
  .dropdown-item {
    padding: 8px 16px;
    text-decoration: none;
    display: block;
    color: #333;
    font-size: 14px;
  }
  
  .dropdown-item:hover {
    background-color: #f8f9fa;
  }
  
  .comment-actions {
    margin-left: auto;
  }
  
  .dropdown-toggle {
    background: none;
    border: none;
    color: #6c757d;
    cursor: pointer;
  }

  .custom-dropdown-toggle {
  cursor: pointer;
}

</style>

<body>
  <div class="container-fluid px-0 full-width-page">
    <div class="row g-0">
      <!-- Sidebar tr√°i (col-3) -->
      <div class="col-3">
        <div class="bg-white p-5 mt-5 h-100 d-flex flex-column rounded-1">
          <a href="/@son-son-16" class="text-decoration-none text-dark">
            <h6 class="fw-semibold text-start">{{author.fullName}}</h6>
          </a>

          <hr class="w-200 m-0 mb-4 mt-2">

          <div class="d-flex gap-5">
            <button class="btn btn-sm d-flex align-items-center gap-2 p-0 text-secondary bg-transparent" style="border: none; font-size: 17px;" title="Nh·∫•n ƒë·ªÉ th√≠ch b√†i n√†y">
              <i class="fa-regular fa-heart"></i>
              <span>568</span>
            </button>

            <button class="btn btn-sm d-flex align-items-center gap-2 p-0 text-secondary bg-transparent" style="border: none; font-size: 17px;" onclick="toggleComments()" title="B√¨nh lu·∫≠n">
              <i class="fa-regular fa-comment"></i>
              <span>{{post.commentCount}}</span>
            </button>
          </div>
        </div>
      </div>

      <!-- N·ªôi dung ch√≠nh (col-8) -->
      <div class="col-6">
        <div class="container my-5">
          <div class="mb-3">
            <a onclick="history.back()" class="text-muted" style="cursor: pointer;">
              <i class="fa-solid fa-reply fa-sm me-2"></i>Quay l·∫°i
            </a>
          </div>

          <h1 class="fw-bold fs-2 mb-5">{{post.title}}</h1>

          <div class="d-flex align-items-center gap-3 mb-4">
            <img src="{{author.avatar}}" class="rounded-circle" width="50" height="50">
            <div>
              <strong class="d-block">{{author.fullName}}</strong>
              <small class="text-muted">{{timeAgo post.createdAt}}</small>
            </div>
          </div>

          <div class="mb-5">
            {{{post.content}}}
          </div>

          <hr class="my-5">

          <h4 class="mb-4 title-strong">üî•C√°c b√†i vi·∫øt n·ªïi b·∫≠t kh√°c</h4>
          <div class="row">
            {{#each relatedPosts}}
            <div class="col-md-4 mb-4">
              <div class="card h-100 shadow-sm border-0 rounded-4">
                <a href="/posts/{{this.slug}}">
                  <img src="{{this.thumbnail}}" class="card-img-top rounded-top-4" style="height: 180px; object-fit: cover;">
                </a>
                <div class="card-body">
                  <h5 class="card-title">{{this.title}}</h5>
                  <p class="card-text text-muted small">{{this.description}}</p>
                  <a href="/posts/{{this.slug}}" class="btn-grad"> Xem ti·∫øp</a>
                </div>
              </div>
            </div>
            {{/each}}
          </div>
        </div>
      </div>

      <!-- col-2 (sidebar b√¨nh lu·∫≠n) -->
      <div class="col-2">
        <div class="comments-sidebar bg-white" id="commentsSidebar">
          <!-- N√∫t ƒë√≥ng -->
          <div class="d-flex justify-content-end">
            <button class="btn btn-link text-secondary fs-5" onclick="toggleComments(true)" style="text-decoration: none;">
              <i class="fa-solid fa-xmark"></i>
            </button>
          </div>

          <div class="bg-light p-3 ps-5 pe-5 d-flex flex-column bg-white" style="height: 100%;">
            <!-- Form nh·∫≠p b√¨nh lu·∫≠n -->
            <form action="/comments/{{post._id}}" method="POST">
              <div class="mb-4">
                <div class="d-flex align-items-start gap-2">
                  <img src="{{account.avatar}}" class="rounded-circle" width="40" height="40">
                  <div id="commentInputTrigger" class="form-control placeholder-text" onclick="showCommentInput()" style="cursor: text; background-color:#eef4fc; border: 0px;">
                    Nh·∫≠p b√¨nh lu·∫≠n m·ªõi c·ªßa b·∫°n
                  </div>
                  <textarea id="commentInputArea" name="content" class="form-control d-none" rows="3" placeholder="Nh·∫≠p b√¨nh lu·∫≠n..."></textarea>
                </div>
                <div id="commentActions" class="d-none mt-4 d-flex justify-content-end gap-2">
                  <button type="button" class="btn btn-grad-cancel align-self-center" onclick="hideCommentInput()" style="width: 150px; height: 35px;">H·ªßy</button>
                  <button type="submit" class="btn btn-grad btn-sm" style="width: 150px; height: 35px;">B√¨nh lu·∫≠n</button>
                </div>
              </div>
            </form>

            <!-- Danh s√°ch b√¨nh lu·∫≠n -->
            <div class="d-flex justify-content-between align-items-center mb-4">
              <h5 class="mb-0">B√¨nh lu·∫≠n ({{post.commentCount}})</h5>
            </div>

            <div class="flex-grow-1 overflow-auto">
              <div class="mb-4">
                {{#each comments}}
                  {{!-- Hi·ªÉn th·ªã b√¨nh lu·∫≠n --}}
                  <div class="mb-5 comment-item">
                    <div class="d-flex gap-2 mb-3">
                      <img src="{{this.user.avatar}}" class="rounded-circle" width="40" height="40">
                      <div class="d-flex justify-content-between align-items-center">
                        <strong class="d-block" style="color: #ff7e5f;">{{this.user.fullName}}</strong>
                        <small class="text-muted" style="margin-top: 1px;">{{timeAgo this.createdAt}}</small>
                      </div>

                      {{!-- Dropdown menu for actions --}}
                      {{#if (eq (toString this.user_id) (toString @root.account.id))}} 
                        <div class="comment-actions dropdown">
                          <i class="fa-solid fa-ellipsis custom-dropdown-toggle" style="color: #ff7e5f;" onclick="toggleDropdown(event, this)"></i>
                          <div class="dropdown-menu">
                            <a href="#" class="dropdown-item" onclick="editComment(this)">Ch·ªânh s·ª≠a</a>
                            <a href="#" class="dropdown-item btn-delete-comment" data-id="{{this._id}}">X√≥a</a>
                          </div>
                        </div>
                      {{/if}}

                    </div>
                    {{#if this.isUndo}}
                      <p class="fst-italic text-muted">
                        B√¨nh lu·∫≠n n√†y ƒë√£ b·ªã x√≥a. <a href= "" class="btn-undo-cmt" data-id="{{this._id}}">Ho√†n t√°c</a>
                      </p>
                    {{else}}
                      <p>{{this.content}}</p>
                    {{/if}}
                    {{!-- Textarea ch·ªânh s·ª≠a (·∫®n) --}}
                    <form action="/comments/{{this._id}}?_method=PUT" method="POST">
                      <div class="comment-edit-area-{{this._id}}" style="display: none;">
                        <textarea class="form-control" name="editContent" rows="3">{{this.content}}</textarea>
                        <div class="d-flex justify-content-end gap-2 mt-2">
                          <button type="button" class="btn btn-grad-cancel btn-sm" onclick="cancelCommentEdit('{{this._id}}')" style="width: 150px; height: 35px;" >H·ªßy</button>
                          <button type="submit" class="btn btn-grad btn-sm" style="width: 150px; height: 35px;" >L∆∞u</button>
                        </div>
                      </div>
                    </form>

                    <div class="gap-3 d-flex align-items-center">
                      <button class="btn btn-link p-0 fw-semibold text-decoration-none" style="color: #ff7e5f;" >Th√≠ch</button>
                      <button class="btn btn-link p-0 fw-semibold text-decoration-none reply-button" data-id="{{this.user._id}}" data-fullName="{{this.user.fullName}}" style="color: #ff7e5f;" onclick="showReplyInput(this)">Tr·∫£ l·ªùi</button>
                    </div>

                    <!-- Reply Textarea -->
                    <form action="/comments/{{this._id}}/reply" method="POST" class="comment-textarea">
                      <div class="d-flex align-items-start gap-2">
                        <img src="{{@root.account.avatar}}" class="rounded-circle" width="40" height="40">
                        <div class="form-control" contenteditable="true" style="min-height: 60px; border-radius: 10px;" placeholder="Nh·∫≠p c√¢u tr·∫£ l·ªùi..." oninput="updateHiddenInput(this)">
                            <span class="reply-mention" contenteditable="false"></span>
                            
                        </div>
                        <input type="hidden" name="replies" value="">
                      </div>
                      <div class="mt-4 d-flex justify-content-end gap-2">
                        <button type="button" class="btn btn-grad-cancel btn-sm align-self-center" onclick="hideReplyInput(this)" style="width: 150px; height: 35px; border-radius: 10px;" >H·ªßy</button>
                        <button type="submit" class="btn btn-grad btn-sm" style="width: 150px; height: 35px;">Tr·∫£ l·ªùi</button>
                      </div>
                    </form>
                    <!-- Replies Section -->
                    <div class="mt-4 ps-5 border-start">
                      {{#each this.replies}}
                        <div class="mb-4 reply-item"> <!-- Th√™m class reply-item -->
                          <div class="d-flex gap-2 mb-3">
                            <img src="{{this.user.avatar}}" class="rounded-circle" width="35" height="35">
                            <div class="d-flex gap-2 ">
                              <strong class="d-block" style="color: #ff7e5f;">{{this.user.fullName}}</strong>
                              <small class="text-muted" style="margin-top: 1px;">{{timeAgo this.createdAt}}</small>
                            </div>

                            {{!-- Dropdown menu for actions (V√¨ HBS kh√¥ng h·ªó tr·ª£ so s√°nh ObjectID n√™n ph·∫£i toString() --}}
                            {{#if (eq (toString this.user_id) (toString @root.account.id))}} 
                              <div class="comment-actions dropdown">
                                <i class="fa-solid fa-ellipsis custom-dropdown-toggle" style="color: #ff7e5f;" onclick="toggleDropdown(event, this)"></i>
                                <div class="dropdown-menu">
                                  <a href="#" class="dropdown-item" onclick="editReply(this)">Ch·ªânh s·ª≠a</a>
                                  <a href="#" class="dropdown-item" onclick="deleteReply(this)">X√≥a</a>
                                </div>
                              </div>
                            {{/if}}
                      
                          </div>
                          <p class="mt-2"><span class="reply-mention">{{this.replyToUser.fullName}}</span> {{this.content}}</p>

                          {{!-- Editable contenteditable (hidden by default) --}}
                          <form class="form-edit-reply" action="/comments/{{../this._id}}/replies/{{this._id}}?_method=PUT" method="POST">
                            <div class="reply-edit-area-{{this._id}}" style="display: none;">
                              <div class="d-flex gap-2">
                                <div class="form-control" contenteditable="true" style="min-height: 60px; border-radius: 10px;">
                                  <span class="reply-mention">{{this.replyToUser.fullName}}</span>
                                  {{this.content}}
                                </div>
                                <input type="hidden" name="editReplies" value="">
                              </div>
                              <div class="d-flex justify-content-end gap-2 mt-2">
                                <button type="button" class="btn btn-grad-cancel btn-sm" onclick="cancelReplyEdit('{{this._id}}')" style="width: 150px; height: 35px;">H·ªßy</button>
                                <button type="submit" class="btn btn-grad btn-sm" style="width: 150px; height: 35px;">L∆∞u</button>
                              </div>
                            </div>
                          </form>
                          
                          <div class="gap-3 d-flex align-items-center">
                            <button class="btn btn-link p-0 fw-semibold text-decoration-none" style="color: #ff7e5f;">Th√≠ch</button>
                            <button class="btn btn-link p-0 fw-semibold text-decoration-none reply-button" style="color: #ff7e5f;" onclick="showReplyInput(this)" data-id="{{this.user._id}}" data-fullName="{{this.user.fullName}}">Tr·∫£ l·ªùi</button>
                          </div>

                          <!-- Reply Textarea (di chuy·ªÉn v√†o trong m·ªói reply-item) -->
                          <form action="/comments/{{../_id}}/reply" method="POST" class="comment-textarea">
                            <div class="d-flex align-items-start gap-2 mt-3">
                              <img src="{{@root.account.avatar}}" class="rounded-circle" width="40" height="40">
                              <div class="form-control" contenteditable="true" style="min-height: 60px; border-radius: 10px;" placeholder="Nh·∫≠p c√¢u tr·∫£ l·ªùi..." oninput="updateHiddenInput(this)">
                                  <span class="reply-mention" contenteditable="false"></span>
                              </div>
                              <input type="hidden" name="replies" value="">
                            </div>
                            <div class="mt-4 d-flex justify-content-end gap-2">
                              <button type="button" class="btn btn-grad-cancel btn-sm align-self-center" onclick="hideReplyInput(this)" style="width: 150px; height: 35px; border-radius: 10px;">H·ªßy</button>
                              <button type="submit" class="btn btn-grad btn-sm" style="width: 150px; height: 35px;">Tr·∫£ l·ªùi</button>
                            </div>
                          </form>
                        </div>
                      {{/each}}
                    </div>
                  </div>
                {{/each}}
              </div>

              <!-- Th√™m b√¨nh lu·∫≠n kh√°c t·∫°i ƒë√¢y -->
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

<!-- Overlay -->
<div class="overlay" onclick="toggleComments(true)"></div>

{{!-- Form ·∫©n ƒë·ªÉ x√≥a b√¨nh lu·∫≠n --}}
<form id="deleteCommentForm" method="POST" style="display: none;"></form>
</body>

{{!-- Form ·∫©n ƒë·ªÉ ho√†n t√°c b√¨nh lu·∫≠n --}}
<form id="undoCommentForm" method="POST" style="display: none;"></form>
</body>

<script>

  // X·ª≠ l√Ω x√≥a b√¨nh lu·∫≠n
  const deleteCommentForms = document.getElementById('deleteCommentForm')
  const btnDeleteComment = document.querySelectorAll('.btn-delete-comment')

  btnDeleteComment.forEach(btn => {
    btn.addEventListener('click', function(event) {
      event.preventDefault()
      const commentId = this.getAttribute('data-id')

      deleteCommentForms.action = `/comments/${commentId}?_method=DELETE`
      deleteCommentForms.submit(); 
    });
  });

  // X·ª≠ l√≠ ho√†n t√°c b√¨nh lu·∫≠n
  const undoCommentForms = document.getElementById('undoCommentForm')
  const btnUndoComment = document.querySelectorAll('.btn-undo-cmt')

  btnUndoComment.forEach(btn => {
    btn.addEventListener('click', function(event) {
      event.preventDefault()
      const commentId = this.getAttribute('data-id')

      undoCommentForms.action = `/comments/${commentId}/restore?_method=PATCH`
      undoCommentForms.submit(); 
    });
  });

  // H√†m ƒë·ªÉ b·∫≠t/t·∫Øt sidebar b√¨nh lu·∫≠n
  function toggleComments(forceClose = false) {
      const sidebar = document.getElementById('commentsSidebar'); // L·∫•y ph·∫ßn t·ª≠ sidebar b√¨nh lu·∫≠n
      const overlay = document.querySelector('.overlay'); // L·∫•y ph·∫ßn t·ª≠ overlay (l·ªõp ph·ªß)
      const body = document.body; // L·∫•y ph·∫ßn t·ª≠ body c·ªßa trang

      if (forceClose) { // N·∫øu forceClose l√† true, ƒë√≥ng sidebar
          sidebar.classList.remove('show'); // ·∫®n sidebar
          overlay.classList.remove('show'); // ·∫®n overlay

          setTimeout(() => {
              body.classList.remove('no-scroll'); // B·ªè l·ªõp no-scroll ƒë·ªÉ cho ph√©p cu·ªôn trang
              body.style.paddingRight = ''; // X√≥a padding right ƒë·ªÉ tr√°nh nh·∫£y giao di·ªán
          }, 300);

          hideCommentInput(); // ·∫®n input b√¨nh lu·∫≠n n·∫øu ƒëang hi·ªÉn th·ªã
          return;
      }

      // N·∫øu forceClose l√† false, m·ªü sidebar
      sidebar.classList.add('show'); // Hi·ªÉn th·ªã sidebar
      overlay.classList.add('show'); // Hi·ªÉn th·ªã overlay
      body.classList.add('no-scroll'); // Th√™m l·ªõp no-scroll ƒë·ªÉ ngƒÉn cu·ªôn trang

      // Ch·ªëng "nh·∫£y" giao di·ªán do scrollbar m·∫•t
      const scrollBarWidth = window.innerWidth - document.documentElement.clientWidth;
      if (scrollBarWidth > 0) {
          body.style.paddingRight = scrollBarWidth + 'px'; // Th√™m padding right ƒë·ªÉ b√π tr·ª´ kho·∫£ng tr·ªëng scrollbar
      }
  }

  // H√†m ƒë·ªÉ hi·ªÉn th·ªã input b√¨nh lu·∫≠n
  function showCommentInput() {
      document.getElementById('commentInputTrigger').classList.add('d-none'); // ·∫®n n√∫t k√≠ch ho·∫°t input b√¨nh lu·∫≠n
      document.getElementById('commentInputArea').classList.remove('d-none'); // Hi·ªÉn th·ªã input b√¨nh lu·∫≠n
      document.getElementById('commentActions').classList.remove('d-none'); // Hi·ªÉn th·ªã n√∫t g·ª≠i v√† h·ªßy
      document.getElementById('commentInputArea').focus(); // T·∫≠p trung v√†o input b√¨nh lu·∫≠n
  }

  // H√†m ƒë·ªÉ ·∫©n input b√¨nh lu·∫≠n
  function hideCommentInput() {
      document.getElementById('commentInputTrigger').classList.remove('d-none'); // Hi·ªÉn th·ªã n√∫t k√≠ch ho·∫°t input b√¨nh lu·∫≠n
      document.getElementById('commentInputArea').classList.add('d-none'); // ·∫®n input b√¨nh lu·∫≠n
      document.getElementById('commentActions').classList.add('d-none'); // ·∫®n n√∫t g·ª≠i v√† h·ªßy
  }

  // H√†m ƒë·ªÉ hi·ªÉn th·ªã input tr·∫£ l·ªùi
  function showReplyInput(button) {
      // ·∫®n t·∫•t c·∫£ c√°c textarea tr·∫£ l·ªùi ƒëang hi·ªÉn th·ªã tr∆∞·ªõc ƒë√≥
      document.querySelectorAll('.comment-textarea').forEach(textarea => {
          textarea.classList.remove('show');
      });

      // T√¨m ph·∫ßn t·ª≠ cha g·∫ßn nh·∫•t l√† comment-item ho·∫∑c reply-item
      const commentContainer = button.closest('.comment-item, .reply-item');

      // T√¨m div v·ªõi contenteditable="true" trong container ƒë√≥
      const replyForm = commentContainer.querySelector('.comment-textarea');

      if (replyForm) {
          const contenteditableDiv = replyForm.querySelector('[contenteditable="true"]'); // L·∫•y div contenteditable
          const fullName = button.getAttribute('data-fullName'); // L·∫•y t√™n ng∆∞·ªùi d√πng ƒë∆∞·ª£c mention
          const mentionSpan = replyForm.querySelector('.reply-mention'); // L·∫•y span ch·ª©a mention

          replyForm.classList.add('show'); // Hi·ªÉn th·ªã form tr·∫£ l·ªùi
          mentionSpan.innerText = `@${fullName} `; // ƒê·∫∑t n·ªôi dung mention

          // Th√™m kho·∫£ng tr·∫Øng v√†o n·ªôi dung div
          contenteditableDiv.innerHTML = mentionSpan.outerHTML + '&nbsp;';

          // T·∫°o m·ªôt range ƒë·ªÉ con tr·ªè n·∫±m sau n·ªôi dung ƒë√£ nh·∫≠p
          const range = document.createRange();
          const selection = window.getSelection();

          // Di chuy·ªÉn con tr·ªè ƒë·∫øn cu·ªëi n·ªôi dung ƒë√£ nh·∫≠p
          range.selectNodeContents(contenteditableDiv);
          range.collapse(false);

          selection.removeAllRanges();
          selection.addRange(range);

          contenteditableDiv.focus(); // T·∫≠p trung v√†o div contenteditable

          // L·∫•y gi√° tr·ªã id c·ªßa ng∆∞·ªùi b√¨nh lu·∫≠n g√°n v√†o form ·∫©n 
          const replyToUserId = button.getAttribute('data-id'); 
          const replyToUserIdInput = document.createElement('input'); 
          replyToUserIdInput.type = 'hidden'; 
          replyToUserIdInput.name = 'replyToUserId'; 
          replyToUserIdInput.value = replyToUserId; 
          replyForm.appendChild(replyToUserIdInput); 
      }
  }

  // H√†m ƒë·ªÉ ·∫©n input tr·∫£ l·ªùi
  function hideReplyInput(button) {
      // T√¨m form cha ch·ª©a n√∫t h·ªßy
      const form = button.closest('form');
      if (form) {
          form.classList.remove('show'); // ·∫®n form tr·∫£ l·ªùi
      }
  }

  // G·∫Øn s·ª± ki·ªán click cho overlay ƒë·ªÉ ƒë√≥ng sidebar
  document.querySelector('.overlay').addEventListener('click', () => toggleComments(true));

  // Ki·ªÉm tra URL ƒë·ªÉ x√°c ƒë·ªãnh xem c√≥ c·∫ßn m·ªü sidebar b√¨nh lu·∫≠n kh√¥ng
  const urlParams = new URLSearchParams(window.location.search);
  const showComments = urlParams.get('showComments');

  if (showComments === 'true') {
      toggleComments(); // M·ªü sidebar
  }

  // X√≥a tham s·ªë showComments kh·ªèi URL
  const url = new URL(window.location);
  url.searchParams.delete('showComments');
  window.history.replaceState({}, document.title, url.toString());

  // H√†m ƒë·ªÉ c·∫≠p nh·∫≠t gi√° tr·ªã c·ªßa input ·∫©n
  function updateHiddenInput(editableDiv) {
      // T√¨m input ·∫©n trong form li·ªÅn k·ªÅ
      const hiddenInput = editableDiv.nextElementSibling;
      if (hiddenInput && hiddenInput.type === "hidden") {
          let content = editableDiv.innerHTML; // L·∫•y n·ªôi dung t·ª´ div contenteditable
          const mentionSpan = editableDiv.querySelector('.reply-mention'); // L·∫•y span mention

          if (mentionSpan) {
              content = content.replace(mentionSpan.outerHTML, ''); // Lo·∫°i b·ªè mention span
          }

          // Thay th·∫ø c√°c k√Ω t·ª± HTML kh√¥ng c·∫ßn thi·∫øt
          content = content.replace(/&nbsp;/g, ' ').replace(/<br>/g, '\n').replace(/<div>|<\/div>/g, '\n');
          hiddenInput.value = content.trim(); // C·∫≠p nh·∫≠t gi√° tr·ªã input ·∫©n
      }
  }

  // H√†m hi·ªÉn th·ªã menu dropdown
  function toggleDropdown(event, button) {
    event.stopPropagation(); 
    
    // ƒê√≥ng t·∫•t c·∫£ c√°c menu dropdown kh√°c
    document.querySelectorAll('.dropdown-menu.show').forEach(menu => {
      if (menu !== button.nextElementSibling) {
        menu.classList.remove('show');
      }
    });
    
    // M·ªü ho·∫∑c ƒë√≥ng menu dropdown hi·ªán t·∫°i
    const dropdown = button.nextElementSibling;
    dropdown.classList.toggle('show');
  }
  
  // ƒê√≥ng menu dropdown khi nh·∫•p ra ngo√†i
  document.addEventListener('click', function(event) {
    document.querySelectorAll('.dropdown-menu.show').forEach(menu => {
      menu.classList.remove('show');
    });
  });

  function editComment(editButton) {
    // T√¨m ph·∫ßn t·ª≠ comment-item cha g·∫ßn nh·∫•t c·ªßa n√∫t "Ch·ªânh s·ª≠a"
    const commentItem = editButton.closest('.comment-item');
    if (commentItem) {
      // T√¨m ph·∫ßn t·ª≠ hi·ªÉn th·ªã n·ªôi dung b√¨nh lu·∫≠n v√† textarea ch·ªânh s·ª≠a trong comment-item
      const commentContent = commentItem.querySelector('p');
      const editArea = commentItem.querySelector('[class^="comment-edit-area-"]');

      // ·∫®n n·ªôi dung b√¨nh lu·∫≠n v√† hi·ªÉn th·ªã textarea ch·ªânh s·ª≠a
      if (commentContent && editArea) {
        commentContent.style.display = 'none';
        editArea.style.display = 'block';

        // Focus v√†o textarea ƒë·ªÉ ng∆∞·ªùi d√πng c√≥ th·ªÉ b·∫Øt ƒë·∫ßu ch·ªânh s·ª≠a ngay
        const textarea = editArea.querySelector('textarea');
        if (textarea) {
          // ƒê·∫∑t con tr·ªè v√†o cu·ªëi n·ªôi dung
          textarea.selectionStart = textarea.value.length;
          textarea.selectionEnd = textarea.value.length; 
          textarea.focus();
        }
      }
    }
  }

  function cancelCommentEdit(commentId) {
    // T√¨m ph·∫ßn t·ª≠ comment-edit-area t∆∞∆°ng ·ª©ng b·∫±ng commentId
    const editArea = document.querySelector(`.comment-edit-area-${commentId}`);
    if (editArea) {
      // T√¨m th·∫ª form cha c·ªßa editArea
      const formElement = editArea.parentNode;
      if (formElement) {
        // T√¨m ph·∫ßn t·ª≠ <p> li·ªÅn k·ªÅ tr∆∞·ªõc th·∫ª form
        const commentContent = formElement.previousElementSibling;
        if (commentContent && commentContent.tagName === 'P') {

          commentContent.style.display = 'block';
          editArea.style.display = 'none';
        } else {
          console.log('Kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠ <p> tr∆∞·ªõc form.');
        }
      } else {
        console.log('Kh√¥ng t√¨m th·∫•y th·∫ª form cha c·ªßa editArea.');
      }
    }
  }

  function editReply(editButton) {
    // T√¨m ph·∫ßn t·ª≠ reply-item cha g·∫ßn nh·∫•t
    const replyItem = editButton.closest('.reply-item');
    if (replyItem) {
      // T√¨m ph·∫ßn t·ª≠ hi·ªÉn th·ªã n·ªôi dung tr·∫£ l·ªùi v√† div contenteditable ch·ªânh s·ª≠a
      const replyContent = replyItem.querySelector('p.mt-2');
      const editArea = replyItem.querySelector('[class^="reply-edit-area-"]');

      if (replyContent && editArea) {
        replyContent.style.display = 'none';
        editArea.style.display = 'flex'; // Hi·ªÉn th·ªã flex ƒë·ªÉ c√°c ph·∫ßn t·ª≠ con x·∫øp h√†ng ngang
        editArea.style.flexDirection = 'column'; // ƒê·∫£m b·∫£o c√°c n√∫t ·ªü d∆∞·ªõi
        // Focus v√†o div contenteditable
        const editableDiv = editArea.querySelector('[contenteditable="true"]');
        if (editableDiv) {
          editableDiv.focus();
          // ƒê·∫∑t con tr·ªè v√†o cu·ªëi n·ªôi dung (t√πy ch·ªçn)
          const range = document.createRange();
          range.selectNodeContents(editableDiv);
          range.collapse(false);
          const selection = window.getSelection();
          selection.removeAllRanges();
          selection.addRange(range);
        }
      }
    }
  }

  function cancelReplyEdit(replyId) {
    // T√¨m ph·∫ßn t·ª≠ reply-edit-area t∆∞∆°ng ·ª©ng
    const editArea = document.querySelector(`.reply-edit-area-${replyId}`);
    if (editArea) {
      // T√¨m th·∫ª form cha c·ªßa editArea
      const formElement = editArea.parentNode;
      if (formElement) {
        // T√¨m ph·∫ßn t·ª≠ <p> li·ªÅn k·ªÅ tr∆∞·ªõc th·∫ª form
        const replyContent = formElement.previousElementSibling;
        if (replyContent && replyContent.matches('p.mt-2')) {
          // Hi·ªÉn th·ªã l·∫°i n·ªôi dung tr·∫£ l·ªùi v√† ·∫©n khu v·ª±c ch·ªânh s·ª≠a
          replyContent.style.display = 'block';
          editArea.style.display = 'none';
        } else {
          console.log('Kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠ <p.mt-2> tr∆∞·ªõc form.');
        }
      } else {
        console.log('Kh√¥ng t√¨m th·∫•y th·∫ª form cha c·ªßa editArea.');
      }
    }
  }

  // X·ª≠ l√≠ ch·ªânh s·ª≠a reply
  const editReplyForms = document.querySelectorAll('.form-edit-reply')
  editReplyForms.forEach(form => {
    form.addEventListener('submit', function(event) {
      event.preventDefault(); // NgƒÉn ch·∫∑n h√†nh ƒë·ªông m·∫∑c ƒë·ªãnh c·ªßa form
      const hideInput = form.querySelector('input[name="editReplies"]'); // T√¨m input ·∫©n
      const contenteditableDiv = form.querySelector('[contenteditable="true"]'); // T√¨m div contenteditable

      let content = contenteditableDiv.innerHTML; // L·∫•y n·ªôi dung t·ª´ div contenteditable
      const mentionSpan = contenteditableDiv.querySelector('.reply-mention'); // L·∫•y span mention

      if (mentionSpan) {
          content = content.replace(mentionSpan.outerHTML, ''); // Lo·∫°i b·ªè mention span
      }

      // Thay th·∫ø c√°c k√Ω t·ª± HTML kh√¥ng c·∫ßn thi·∫øt
      content = content.replace(/&nbsp;/g, ' ').replace(/<br>/g, '\n').replace(/<div>|<\/div>/g, '\n');
      hideInput.value = content.trim(); // C·∫≠p nh·∫≠t gi√° tr·ªã input ·∫©n

      form.submit(); // G·ª≠i form
    
    });
  });


</script>

